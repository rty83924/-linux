#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    log         127.0.0.1 local2
    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         50s
    timeout client          50s
    timeout server          50s
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 100

#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------
#frontend  main *:8080
#    acl url_static       path_beg       -i /static /images /javascript /stylesheets
#    acl url_static       path_end       -i .jpg .gif .png .css .js
#    use_backend static          if url_static
#    default_backend             app
#frontend http-in
#       bind *:80
#       mode http
#       option httplog
#       option dontlognull
#       option forwardfor
#       option httpclose
#       log global
#       default_backend servers

#---------------------------------------------------------------------
# static backend for serving up images, stylesheets and such
#---------------------------------------------------------------------
#backend static
#    balance     roundrobin
#    server      static 127.0.0.1:4331 check
#---------------------------------------------------------------------
# round robin balancing between the various backends
#---------------------------------------------------------------------
#backend servers
#   balance     roundrobin
#    balance    static-rr
#    balance     first
#    server web1 192.168.0.2:80 check maxconn 2 inter 2000 rise 2 fall 1
#    server web2 211.21.200.67:80 check maxconn 2 inter 2000 rise 2 fall 1
#    option httpclose
#    option forwardfor
#    option redispatch
listen admin_status
    bind *:8000
         mode  http
         stats  enable
         stats  uri /test.admin
         stats  auth admin:admin
         stats  refresh 5
         stats  hide-version
         stats admin if TRUE
         stats admin if TRUE
listen webserver
        bind *:80
        mode http
        option httpclose
        option forwardfor
        option redispatch
#       balance first
        balance roundrobin
#       balance static-rr
        cookie SERVERID insert indirect nocache
        server web1 server1 check rise 3 fall 2 cookie admin1
        server web2 server2 check rise 3 fall 2 cookie admin2
